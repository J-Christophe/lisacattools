
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_smbh/plot_source_time_evolving.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_smbh_plot_source_time_evolving.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_smbh_plot_source_time_evolving.py:


Time-evolving parameter estimation
=================================

Corner plot of select parameters for a single source showing how 
parameter estimation changes with observing time.

.. GENERATED FROM PYTHON SOURCE LINES 8-40

.. code-block:: default


    import glob
    import numpy as np
    import pandas as pd
    import matplotlib.pyplot as plt
    import lisacattools.lisacattools as lisacat
    from chainconsumer import ChainConsumer


    # Find the list of catalogs
    catPath = 'MBH_catalog'
    catFiles = glob.glob(catPath+'/MBH_wk*C.h5')

    # Read individual DataFrames' metadata by specifying the key parameter
    dfs = list()
    for catFile in catFiles:
        df = pd.read_hdf(catFile, key = 'metadata')
        df['location'] = catFile
        dfs.append(df) 
    meta = pd.concat(dfs)

    # sort metadata by observation week, putting most recent catalog last in the list
    meta = meta.sort_values(by='observation week')

    # load and display the detections, sorted by primary mass 
    catIdx = len(meta)-1
    catName = meta.index[catIdx]
    catFile = meta.iloc[catIdx]['location']
    cat = pd.read_hdf(catFile, key='detections')
    cat = cat.sort_values(by='Mass 1')
    cat[['Parent','Log Likelihood','Mass 1', 'Mass 2', 'Luminosity Distance']]






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Parent</th>
          <th>Log Likelihood</th>
          <th>Mass 1</th>
          <th>Mass 2</th>
          <th>Luminosity Distance</th>
        </tr>
        <tr>
          <th>name</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>MBH010993271</th>
          <td>MBH010993145</td>
          <td>58.644439</td>
          <td>6043.582334</td>
          <td>1484.773218</td>
          <td>22.671702</td>
        </tr>
        <tr>
          <th>MBH006058694</th>
          <td>MBH006058694</td>
          <td>119.338404</td>
          <td>10349.085349</td>
          <td>3303.282920</td>
          <td>47.235091</td>
        </tr>
        <tr>
          <th>MBH000373540</th>
          <td></td>
          <td>60.282950</td>
          <td>11191.400618</td>
          <td>1573.347120</td>
          <td>22.205113</td>
        </tr>
        <tr>
          <th>MBH002301433</th>
          <td></td>
          <td>67.615841</td>
          <td>12659.907280</td>
          <td>3912.600441</td>
          <td>34.400859</td>
        </tr>
        <tr>
          <th>MBH005546845</th>
          <td>MBH005546845</td>
          <td>652.996924</td>
          <td>13238.473697</td>
          <td>2707.606755</td>
          <td>30.323258</td>
        </tr>
        <tr>
          <th>MBH004556400</th>
          <td>MBH004556400</td>
          <td>243.337498</td>
          <td>15868.967713</td>
          <td>9036.333963</td>
          <td>28.921349</td>
        </tr>
        <tr>
          <th>MBH004650719</th>
          <td>MBH004650719</td>
          <td>446.562104</td>
          <td>22450.923508</td>
          <td>8796.170612</td>
          <td>59.148264</td>
        </tr>
        <tr>
          <th>MBH001865195</th>
          <td>MBH001865195</td>
          <td>164.506458</td>
          <td>24034.822836</td>
          <td>8748.509775</td>
          <td>95.079793</td>
        </tr>
        <tr>
          <th>MBH007449510</th>
          <td>MBH007449510</td>
          <td>72.207804</td>
          <td>38276.504295</td>
          <td>2615.575967</td>
          <td>100.930430</td>
        </tr>
        <tr>
          <th>MBH006253789</th>
          <td>MBH006253789</td>
          <td>260.016246</td>
          <td>51499.191655</td>
          <td>5166.812496</td>
          <td>24.506354</td>
        </tr>
        <tr>
          <th>MBH011318669</th>
          <td>MBH011317078</td>
          <td>740.270521</td>
          <td>142698.356416</td>
          <td>31498.663144</td>
          <td>13.886229</td>
        </tr>
        <tr>
          <th>MBH007807200</th>
          <td>MBH007807200</td>
          <td>189597.629550</td>
          <td>641359.177017</td>
          <td>83719.952286</td>
          <td>14.897055</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 41-42

Choose a source from the list of detections and get its history through the different catalogs

.. GENERATED FROM PYTHON SOURCE LINES 42-52

.. code-block:: default


    # Pick a source, any source
    sourceIdx = 'MBH005546845'

    # Get source history and display table with parameters and observing weeks containing source
    srcHist = lisacat.getLineage(meta,catName,sourceIdx)
    srcHist.drop_duplicates(subset='Log Likelihood',keep='last',inplace=True)
    srcHist.sort_values(by='Observation Week',ascending=True,inplace=True)
    srcHist[['Observation Week','Parent','Log Likelihood','Mass 1', 'Mass 2', 'Luminosity Distance']]






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Observation Week</th>
          <th>Parent</th>
          <th>Log Likelihood</th>
          <th>Mass 1</th>
          <th>Mass 2</th>
          <th>Luminosity Distance</th>
        </tr>
        <tr>
          <th>name</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>MBH005540184</th>
          <td>4.0</td>
          <td></td>
          <td>69.186329</td>
          <td>9058.387458</td>
          <td>3656.104345</td>
          <td>32.844051</td>
        </tr>
        <tr>
          <th>MBH005542433</th>
          <td>5.0</td>
          <td>MBH005540184</td>
          <td>105.454620</td>
          <td>11341.213640</td>
          <td>3043.851925</td>
          <td>32.564748</td>
        </tr>
        <tr>
          <th>MBH005546150</th>
          <td>6.0</td>
          <td>MBH005542433</td>
          <td>155.709338</td>
          <td>19916.458243</td>
          <td>2004.123403</td>
          <td>31.018574</td>
        </tr>
        <tr>
          <th>MBH005546439</th>
          <td>7.0</td>
          <td>MBH005546150</td>
          <td>226.169428</td>
          <td>21528.119205</td>
          <td>1896.116706</td>
          <td>30.882839</td>
        </tr>
        <tr>
          <th>MBH005546810</th>
          <td>8.0</td>
          <td>MBH005546439</td>
          <td>332.303904</td>
          <td>20199.039472</td>
          <td>1984.569259</td>
          <td>30.559129</td>
        </tr>
        <tr>
          <th>MBH005546759</th>
          <td>9.0</td>
          <td>MBH005546810</td>
          <td>523.048089</td>
          <td>16537.055819</td>
          <td>2292.503512</td>
          <td>31.031316</td>
        </tr>
        <tr>
          <th>MBH005546845</th>
          <td>10.0</td>
          <td>MBH005546759</td>
          <td>652.996924</td>
          <td>13238.473697</td>
          <td>2707.606755</td>
          <td>30.323258</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 53-54

Load chains for different observing epochs of selected source

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default

    epochs = list(srcHist.index)
    dfs = list()
    for epoch in epochs:
        df = lisacat.getChain(srcHist,epoch,catPath)
        df.insert(len(df.columns),'Source',epoch,True)
        df.insert(len(df.columns),'Observation Week',srcHist.loc[epoch]['Observation Week'],True)
        dfs.append(df[['Source','Observation Week','Mass 1','Mass 2','Spin 1','Spin 2','Ecliptic Latitude','Ecliptic Longitude','Luminosity Distance','Barycenter Merge Time','Merger Phase','Polarization', 'cos inclination']])

    allEpochs = pd.concat(dfs)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

Create corner for multiple observing epochs

.. GENERATED FROM PYTHON SOURCE LINES 66-95

.. code-block:: default


    # Choose weeks for plot from source history table
    wks = [4,8,10]

    # select subset of parameters to plot
    parameters = ['Mass 1','Mass 2','Luminosity Distance']
    parameter_labels = [r'$m_1\ [{\rm M}_\odot]$',
                        r'$m_2\ [{\rm M}_\odot]$',
                        r'$D_L\ [{\rm Gpc}]$',
                       ]
    ranges=[(10000,50000),
            (1000,5000),
            (16,40)]

    c = ChainConsumer()
    for idx,wk in enumerate(wks):
        epoch = allEpochs[allEpochs['Observation Week']==wk]
        samples = epoch[parameters].values

        c.add_chain(samples,parameters=parameter_labels,name='Week '+str(wk))

    c.configure(cmap="plasma")
    fig = c.plotter.plot(figsize=1.5, log_scales=False, extents=ranges)









.. image:: /examples_smbh/images/sphx_glr_plot_source_time_evolving_001.png
    :alt: plot source time evolving
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.005 seconds)


.. _sphx_glr_download_examples_smbh_plot_source_time_evolving.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_source_time_evolving.py <plot_source_time_evolving.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_source_time_evolving.ipynb <plot_source_time_evolving.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
