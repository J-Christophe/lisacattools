
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_smbh/plot_catalog_corner.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_smbh_plot_catalog_corner.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_smbh_plot_catalog_corner.py:


Full catalog corner plots
=========================

Corner plot of select parameters for the full catalog.

.. GENERATED FROM PYTHON SOURCE LINES 7-17

.. code-block:: default


    import glob
    import numpy as np
    import pandas as pd
    import corner
    import seaborn as sns
    import matplotlib.pyplot as plt
    import lisacattools.lisacattools as lisacat
    from chainconsumer import ChainConsumer








.. GENERATED FROM PYTHON SOURCE LINES 18-19

Load the catalog files

.. GENERATED FROM PYTHON SOURCE LINES 19-41

.. code-block:: default


    # Find the list of catalogs
    catPath = 'MBH_catalog'
    catFiles = glob.glob(catPath+'/MBH_wk*C.h5')

    # Read individual DataFrames' metadata by specifying the key parameter
    dfs = list()
    for catFile in catFiles:
        df = pd.read_hdf(catFile, key = 'metadata')
        df['location'] = catFile
        dfs.append(df) 
    meta = pd.concat(dfs)

    # sort metadata by observation week, putting most recent catalog last in the list
    meta = meta.sort_values(by='observation week')

    # load the detections 
    catIdx = len(meta)-1
    catName = meta.index[catIdx]
    catFile = meta.iloc[catIdx]['location']
    cat = pd.read_hdf(catFile, key='detections')








.. GENERATED FROM PYTHON SOURCE LINES 42-43

Create the corner plot with ChainConsumer

.. GENERATED FROM PYTHON SOURCE LINES 43-70

.. code-block:: default


    c = ChainConsumer()

    # selected parameters to plot
    parameters = ['Mass 1','Mass 2', 'Luminosity Distance']

    # how parameter names should be formatted in figure
    parameter_symbols = [r'$m_1\ [{\rm M}_\odot]$',
                         r'$m_2\ [{\rm M}_\odot]$',
                         r'$D_L\ [{\rm Gpc}]$', 
                        ]

    sources = list(cat.index)
    for source in sources:

        # get chain samples
        samples = lisacat.getChain(cat,source,catPath)
    
        # get dataframe into numpy array
        df = samples[parameters].values
    
        # add samples to chainconsumer
        c.add_chain(df,parameters=parameter_symbols,name=source)
    
    #plot!
    c.configure(plot_hists=False)
    fig = c.plotter.plot(figsize=1.5,log_scales=True)



.. image:: /examples_smbh/images/sphx_glr_plot_catalog_corner_001.png
    :alt: plot catalog corner
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  7.215 seconds)


.. _sphx_glr_download_examples_smbh_plot_catalog_corner.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_catalog_corner.py <plot_catalog_corner.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_catalog_corner.ipynb <plot_catalog_corner.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
